version: "3.7"
services: 
    #Micro service 02
    micro_02:
        build: 
            args: 
                user: micro_02      #Will be used in Dockerfile
                uid: 1000           #Will be used in Dockerfile
            context: ./
            dockerfile: Dockerfile
        image: laravel-app
        #command: "php artisan serve"   #This could be done but is not a good practice
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
        networks:
            - microservices02

    #nginx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - 8001:80
        volumes:
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d     #if using apache ./docker/apache:/etc/apache2/sites-available/, create the conf file
        networks:
            - microservices02

    #queue
    queue:
        build: 
            args: 
                user: micro_02      #Same as micro_02
                uid: 1000           #Same as micro_02
            context: ./
            dockerfile: Dockerfile
        command: 'php artisan queue:work'
        restart: unless-stopped
        volumes:
            - ./:/var/www
        depends_on:
            - redis
            #- db_micro_02      #If saving queues on database
        networks:
            - microservices02

    #mysql
    db_micro_02:
        image: mysql:5.7.22
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - ./.docker/mysql/db_data:/var/lib/mysql      #Database will be saved in this folder... DON'T FORGET to add it in .gitignore
        ports:
            - 3309:3306
        networks:
            - microservices02

    #redis
    redis:
        image: redis:latest
        ports:
            - 6379:6379
        networks:
            - microservices02
        
networks:
    microservices02:
        driver: bridge    

        